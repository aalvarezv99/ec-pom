package Consultas;


import org.apache.log4j.Logger;

public class FuncionesSqlQuery {
	
private static Logger log = Logger.getLogger(FuncionesSqlQuery.class);
	
	static ConexionBase dbconector = new ConexionBase();
	
	
	/*
	 * ThainerPerez 21/Dic/2021, V1.0 - 	1. Se crea la Funcion para calcular los intereses de fianza de la certificacion de saldos
	 * 										2. Esta funcion se implementa en el codigo ya que inicialmente estaba creada por SQL la creo el Dev ArturoEstrada
	 * 										*/
	public static void funcionCxcFianzaCertSaldo() {
		log.info("*** Crear funcion cxc Fianza Certificacion Saldos ****");
		try {
			dbconector.ejecutorFunciones("CREATE OR REPLACE FUNCTION public.obtener_cxc_intereses_fianza(iden_credito bigint, fecha_vencimiento date)\r\n"
					+ " RETURNS numeric\r\n"
					+ " LANGUAGE plpgsql\r\n"
					+ "AS $function$\r\n"
					+ "<<var>>\r\n"
					+ "DECLARE \r\n"
					+ "valor_fianza numeric;\r\n"
					+ "intereses_fianza numeric;\r\n"
					+ "intereses_fianza_det numeric;\r\n"
					+ "intereses_fianza_corrido numeric;\r\n"
					+ "tasa_originacion numeric;\r\n"
					+ "tasa_financiacion numeric;\r\n"
					+ "tasa_usura numeric;\r\n"
					+ "tasa_interes_aplicable numeric;\r\n"
					+ "tipo_segmento integer;\r\n"
					+ "ultimo_periodo_cierre date;\r\n"
					+ "dias_calculo integer;\r\n"
					+ "\r\n"
					+ "begin	\r\n"
					+ "	var.intereses_fianza_corrido = 0;\r\n"
					+ "	var.dias_calculo = 0;\r\n"
					+ "\r\n"
					+ "	-- Se asigna último periodo cerrado\r\n"
					+ "	select max(periodo_cierre)\r\n"
					+ "	into ultimo_periodo_cierre\r\n"
					+ "	from historico_cierres hc;\r\n"
					+ "	RAISE info 'Fecha último cierre: %', ultimo_periodo_cierre;\r\n"
					+ "\r\n"
					+ "	-- Se asigna el valor de la fianza\r\n"
					+ "	select des.valor_fianza \r\n"
					+ "	into valor_fianza\r\n"
					+ "	from credito cre \r\n"
					+ "	inner join simulador_analista san on san.id_credito = cre.id\r\n"
					+ "	inner join desglose des on des.id = san.id_desglose \r\n"
					+ "	and cre.id = iden_credito;\r\n"
					+ "	RAISE info 'Valor fianza: %', valor_fianza;\r\n"
					+ "	\r\n"
					+ "	-- Se calcula el valor de intereses de fianza sin deteriorado\r\n"
					+ "	SELECT coalesce(SUM(calculo), 0) FROM (SELECT (pif.valor_int_fianza - SUM(CASE WHEN dcxpf.valor_recibido IS NULL THEN 0 ELSE dcxpf.valor_recibido END)) AS calculo \r\n"
					+ "	into intereses_fianza\r\n"
					+ "	FROM plan_intereses_fianza pif \r\n"
					+ "	LEFT JOIN desglose_contable_cuenta_por_pagar_fianza dcxpf ON dcxpf.id_plan_intereses_fianza = pif.id \r\n"
					+ "	WHERE pif.id_credito = iden_credito\r\n"
					+ "	and pif.deteriorado IS FALSE \r\n"
					+ "	GROUP BY pif.id) as c;\r\n"
					+ "	intereses_fianza = ceil(intereses_fianza);\r\n"
					+ "	RAISE info 'intereses_fianza: %', intereses_fianza;\r\n"
					+ "\r\n"
					+ "	-- Se calcula el valor de intereses de fianza con deteriorado\r\n"
					+ "	SELECT coalesce(SUM(calculo), 0) FROM (SELECT (pif.valor_int_fianza - SUM(CASE WHEN dcxpf.valor_recibido IS NULL THEN 0 ELSE dcxpf.valor_recibido END)) AS calculo \r\n"
					+ "	into intereses_fianza_det\r\n"
					+ "	FROM plan_intereses_fianza pif \r\n"
					+ "	LEFT JOIN desglose_contable_cuenta_por_pagar_fianza dcxpf ON dcxpf.id_plan_intereses_fianza = pif.id \r\n"
					+ "	WHERE pif.id_credito = iden_credito\r\n"
					+ "	and pif.deteriorado IS true \r\n"
					+ "	GROUP BY pif.id) as c;\r\n"
					+ "	intereses_fianza_det = ceil(intereses_fianza_det);\r\n"
					+ "	RAISE info 'intereses_fianza_det: %', intereses_fianza_det;\r\n"
					+ "\r\n"
					+ "	-- Se obtiene la tasa de originación\r\n"
					+ "	select coalesce(san.tasa, 0) \r\n"
					+ "	into tasa_originacion\r\n"
					+ "	from credito cre \r\n"
					+ "	inner join simulador_analista san on san.id_credito = cre.id\r\n"
					+ "	where cre.id = iden_credito;\r\n"
					+ "	RAISE info 'tasa_originacion: %', tasa_originacion;\r\n"
					+ "\r\n"
					+ "	-- Se obtiene el tipo segmento\r\n"
					+ "    select case when segmento = 'Producto AAA' then 1 else 2 end\r\n"
					+ "    into tipo_segmento\r\n"
					+ "    FROM segmento\r\n"
					+ "    WHERE id_credito = iden_credito\r\n"
					+ "    ORDER BY id DESC LIMIT 1;\r\n"
					+ "	RAISE info 'tipo_segmento: %', tipo_segmento;\r\n"
					+ "    \r\n"
					+ "   	-- Se obtiene la tasa de financiamiento de la configuración de la fianza\r\n"
					+ " 	SELECT coalesce(valor_calculo, 0)\r\n"
					+ "   	into tasa_financiacion\r\n"
					+ "   	FROM configuracion_fianza cfi  \r\n"
					+ "   	WHERE cfi.concepto_calculo = 'CUENTA_X_COBRAR_INTERESES_FIANZA' AND cfi.id_segmento = tipo_segmento;\r\n"
					+ "   	RAISE info 'tasa_financiacion: %', tasa_financiacion;\r\n"
					+ "   \r\n"
					+ "	-- Se obtiene la tasa de usura\r\n"
					+ "	SELECT coalesce(ccr.maximo, 0)\r\n"
					+ "	into tasa_usura\r\n"
					+ "	FROM configuracion_credito ccr\r\n"
					+ "	WHERE ccr.tipo = 'tasa'\r\n"
					+ "	AND ccr.tipo_valor = 'BLOQUEANTE';\r\n"
					+ "	tasa_usura = coalesce(tasa_usura, 0);\r\n"
					+ "	RAISE info 'tasa_usura: %', tasa_usura;\r\n"
					+ "   \r\n"
					+ "	-- Se obtiene tasa interes aplicable\r\n"
					+ "	if tasa_financiacion != 0 and (tasa_financiacion < tasa_originacion or tasa_originacion = 0) and (tasa_financiacion < tasa_usura or tasa_usura = 0) then \r\n"
					+ "		tasa_interes_aplicable = tasa_financiacion;\r\n"
					+ "	else \r\n"
					+ "		if tasa_originacion != 0 and (tasa_originacion < tasa_financiacion or tasa_financiacion = 0) and (tasa_originacion < tasa_usura or tasa_usura = 0) then \r\n"
					+ "			tasa_interes_aplicable = tasa_originacion;\r\n"
					+ "		end if;\r\n"
					+ "	end if;\r\n"
					+ "	RAISE info 'tasa_interes_aplicable: %', tasa_interes_aplicable;\r\n"
					+ "\r\n"
					+ "	-- Se obtienen los días para el cálculo de intereses corridos de fianza\r\n"
					+ "	IF DATE_PART('month', ultimo_periodo_cierre) = DATE_PART('month', fecha_vencimiento) THEN \r\n"
					+ "		dias_calculo = DATE_PART('day', fecha_vencimiento);\r\n"
					+ "	else \r\n"
					+ "		dias_calculo = DATE_PART('day', fecha_vencimiento) + 30;\r\n"
					+ "	end if;\r\n"
					+ "	RAISE info 'dias_calculo: %', dias_calculo;\r\n"
					+ "\r\n"
					+ "	-- Se obtiene el valor de los intereses de fianza corridos\r\n"
					+ "	intereses_fianza_corrido = round(valor_fianza * tasa_interes_aplicable / 100 / 30 * dias_calculo, 0);\r\n"
					+ "	RAISE info 'intereses_fianza_corrido: %', intereses_fianza_corrido;\r\n"
					+ "\r\n"
					+ "	return intereses_fianza + intereses_fianza_det + intereses_fianza_corrido;\r\n"
					+ "\r\n"
					+ "END; \r\n"
					+ "$function$\r\n"
					+ ";");
		} catch (Exception e) {
			log.error(e.getMessage());
		}
	}

	public static void ejecutarFuncionOriginacion() {
		log.info("***Ejecutando Funcion Originacion ***");
		try {
			dbconector.ejecutorFunciones(
					"create or replace\r\n"
					+ "function public.calculos_automatizacion_pruebas (\r\n"
					+ "  p_monto integer,\r\n"
					+ "p_xperiodoPrima integer,\r\n"
					+ "p_tasaInicial numeric,\r\n"
					+ "p_plazo numeric,\r\n"
					+ "p_diasIniciales numeric,\r\n"
					+ "p_vlrCompasSaneamientos numeric,\r\n"
					+ "p_ingresos numeric,\r\n"
					+ "p_descLey numeric,\r\n"
					+ "p_descNomina numeric,\r\n"
					+ "p_pagaduria text \r\n"
					+ ")\r\n"
					+ "returns table (\r\n"
					+ "r_monto_solicitar int,\r\n"
					+ "r_cuota_corriente int,\r\n"
					+ "r_estudio_credito_iva int,\r\n"
					+ "r_fianza int,\r\n"
					+ "r_gmf4100 int,\r\n"
					+ "r_valor_intereses_iniciales int,\r\n"
					+ "r_prima_anticipada_seguro int,\r\n"
					+ "r_remanente_estimado int,\r\n"
					+ "r_monto_max_desembolsar int,\r\n"
					+ "r_capacidad_cliente int\r\n"
					+ ")\r\n"
					+ "language plpgsql\r\n"
					+ "as $function$\r\n"
					+ "\r\n"
					+ "declare\r\n"
					+ "-- ============================================================================\r\n"
					+ "-- Autor: Equipo automatizacion Pruebas.\r\n"
					+ "-- Fecha: 08/Nov/2021 Version 1.0 ThainerPerez - Jonathan Varon\r\n"
					+ "-- Se crea la funcion que retorna los calculos de originacion para los simuladores\r\n"
					+ "-- ============================================================================\r\n"
					+ "\r\n"
					+ "\r\n"
					+ "/*VARIABLES GLOBALES PARA LOS PARAMETROS*/\r\n"
					+ "v_tasa_estudio_credito numeric;\r\n"
					+ "\r\n"
					+ "v_tasa_fianza numeric;\r\n"
					+ "\r\n"
					+ "v_vlr_mes_dos numeric;\r\n"
					+ "\r\n"
					+ "v_tasa_uno numeric = p_tasaInicial / 100 ;\r\n"
					+ "\r\n"
					+ "v_tasa_dos numeric;\r\n"
					+ "\r\n"
					+ "v_tasaXmillonSeguro numeric;\r\n"
					+ "\r\n"
					+ "v_valor_millon numeric = 1000000;\r\n"
					+ "\r\n"
					+ "v_iva numeric = 1.19;\r\n"
					+ "\r\n"
					+ "v_diasMes numeric = 30;\r\n"
					+ "\r\n"
					+ "v_gmf4100 numeric = 0.004;\r\n"
					+ "\r\n"
					+ "v_capacidad numeric;\r\n"
					+ "\r\n"
					+ "v_colchon numeric;\r\n"
					+ "\r\n"
					+ "begin\r\n"
					+ "/*PARAMETROS GLOBALES*/\r\n"
					+ "\r\n"
					+ "/*consultar valores capitalizados*/\r\n"
					+ "select\r\n"
					+ "	segunda_tasa,\r\n"
					+ "	estudio_credito,\r\n"
					+ "	fianza,\r\n"
					+ "	mes_cambio_tasa\r\n"
					+ "into\r\n"
					+ "	v_tasa_dos,\r\n"
					+ "	v_tasa_estudio_credito,\r\n"
					+ "	v_tasa_fianza,\r\n"
					+ "	v_vlr_mes_dos\r\n"
					+ "from\r\n"
					+ "	configuracion_capitalizacion_cxc ccc\r\n"
					+ "where\r\n"
					+ "	tasa_inicial = p_tasaInicial;\r\n"
					+ "\r\n"
					+ "/*consultar tasaXmillon*/\r\n"
					+ "select\r\n"
					+ "	tasa_millon\r\n"
					+ "into\r\n"
					+ "	v_tasaXmillonSeguro\r\n"
					+ "from\r\n"
					+ "	seguro;\r\n"
					+ "\r\n"
					+ "/*consultar colchon*/\r\n"
					+ "select\r\n"
					+ "	pp.valor\r\n"
					+ "into\r\n"
					+ "	v_colchon\r\n"
					+ "from\r\n"
					+ "	pagaduria p\r\n"
					+ "inner join pagaduria_parametro pp on\r\n"
					+ "	pp.id_pagaduria = p.id\r\n"
					+ "inner join parametro pa on\r\n"
					+ "	pa.id = pp.id_parametro\r\n"
					+ "where\r\n"
					+ "	p.nombre = p_pagaduria\r\n"
					+ "	and pa.nombre = 'colchon';\r\n"
					+ "\r\n"
					+ "/**********************************CALCULOS DE CONCEPTOS PARA SIMULADORES********************************************/\r\n"
					+ "   \r\n"
					+ "	/*Calcular monto solicitado -  originacion*/\r\n"
					+ "r_monto_solicitar := p_monto + (p_monto * v_tasaXmillonSeguro / v_valor_millon * p_xperiodoPrima)\r\n"
					+ "                + (p_monto * (v_tasa_estudio_credito / 100) * v_iva) + (p_monto * (v_tasa_fianza / 100) * v_iva);\r\n"
					+ "\r\n"
					+ "raise notice 'Monto solicitar %',\r\n"
					+ "(r_monto_solicitar);\r\n"
					+ "\r\n"
					+ "	/*Calcular cuota corriente -  originacion*/\r\n"
					+ "   if(p_plazo < v_vlr_mes_dos) then\r\n"
					+ "    r_cuota_corriente := r_monto_solicitar / ((power((1 + v_tasa_uno), (p_plazo)) - 1) / (v_tasa_uno * power((1 + v_tasa_uno), (p_plazo))));\r\n"
					+ "else\r\n"
					+ "	v_tasa_dos = v_tasa_dos / 100;\r\n"
					+ "   r_cuota_corriente := round(r_monto_solicitar\r\n"
					+ "                    / ((power((1 + v_tasa_uno), (v_vlr_mes_dos - 1)) - 1) / (v_tasa_uno * power((1 + v_tasa_uno), (v_vlr_mes_dos - 1)))\r\n"
					+ "                    + ((power((1 + v_tasa_dos), (p_plazo - (v_vlr_mes_dos - 1))) - 1)\r\n"
					+ "                    / (v_tasa_dos * power((1 + v_tasa_dos), (p_plazo - (v_vlr_mes_dos - 1)))))\r\n"
					+ "                    / (power((1 + v_tasa_uno), (v_vlr_mes_dos - 1)))));\r\n"
					+ "                   \r\n"
					+ "   /*raise notice '>>>> valor credito %', (r_monto_solicitar);\r\n"
					+ "  raise notice '>>>> valor tasaUno  %', (v_tasa_uno);\r\n"
					+ " raise notice '>>>> valor mesDos  %', (v_vlr_mes_dos);\r\n"
					+ " raise notice '>>>> valor tazaDos  %', (v_tasa_dos);\r\n"
					+ "raise notice '>>>> valor plazo  %', (p_plazo);*/\r\n"
					+ "end if;\r\n"
					+ "\r\n"
					+ "raise notice 'Cuota Corriente %', (r_cuota_corriente);\r\n"
					+ "\r\n"
					+ "	/*Calcular Estudio Credito IVA -  originacion*/\r\n"
					+ "r_estudio_credito_iva := ((p_monto * v_tasa_estudio_credito) / 100) + (((p_monto * v_tasa_estudio_credito) / 100) * (v_iva - 1));\r\n"
					+ "\r\n"
					+ "raise notice 'valor Estudio Credito + Iva %', (r_estudio_credito_iva);\r\n"
					+ "\r\n"
					+ "	/*Calcular Fianza -  originacion*/\r\n"
					+ "r_fianza := ((p_monto * v_tasa_fianza) / 100) * v_iva;\r\n"
					+ "\r\n"
					+ "raise notice 'valor Fianza(s) %',\r\n"
					+ "(r_fianza);\r\n"
					+ "\r\n"
					+ "	/*Calcular Gmf4*1000 -  originacion*/\r\n"
					+ "r_gmf4100 := p_vlrCompasSaneamientos * v_gmf4100;\r\n"
					+ "\r\n"
					+ "raise notice 'Valor GMF4100 %', (r_gmf4100);\r\n"
					+ "\r\n"
					+ "	/*Calular Valor Intereses Iniciales -  originacion*/\r\n"
					+ "r_valor_intereses_iniciales := ((r_monto_solicitar * p_tasaInicial) / 100) * (p_diasIniciales / v_diasMes);\r\n"
					+ "\r\n"
					+ "raise notice 'Valor Intereses Iniciales %',\r\n"
					+ "(r_valor_intereses_iniciales);\r\n"
					+ "\r\n"
					+ "	/*Calcular Prima Anticipada Seguro -  originacion*/\r\n"
					+ "r_prima_anticipada_seguro := ((p_monto / v_valor_millon)*(v_tasaXmillonSeguro * p_xperiodoPrima));\r\n"
					+ "\r\n"
					+ "raise notice 'PrimaSeguro %',\r\n"
					+ "(r_prima_anticipada_seguro);\r\n"
					+ "\r\n"
					+ "	/*Calcular Remanente Estimado -  originacion*/\r\n"
					+ "\r\n"
					+ "r_remanente_estimado := r_monto_solicitar - (p_vlrCompasSaneamientos + r_gmf4100 + r_prima_anticipada_seguro + r_estudio_credito_iva + r_fianza);\r\n"
					+ "\r\n"
					+ "raise notice 'Remanente Estimado %', (r_remanente_estimado);\r\n"
					+ "\r\n"
					+ "	/*Calcular Monto Maximo a Desembolsar -  originacion*/\r\n"
					+ "\r\n"
					+ "v_capacidad := ((p_ingresos - p_descLey) / 2) - p_descNomina - v_colchon;\r\n"
					+ "raise notice 'Capacidad Cliente %', (v_capacidad);\r\n"
					+ "\r\n"
					+ "r_capacidad_cliente := v_capacidad;\r\n"
					+ "--Logica\r\n"
					+ "if (p_plazo < v_vlr_mes_dos) then\r\n"
					+ "	r_monto_max_desembolsar := v_capacidad * ((power((1 + v_tasa_uno),(p_plazo))) - 1) / (v_tasa_uno * power((1 + v_tasa_uno),(p_plazo)));\r\n"
					+ "else \r\n"
					+ "	r_monto_max_desembolsar := v_capacidad * ((power((1 + v_tasa_uno), (v_vlr_mes_dos - 1))) - 1)\r\n"
					+ "                    / (v_tasa_uno * power((1 + v_tasa_uno), (v_vlr_mes_dos - 1)))\r\n"
					+ "                    + (v_capacidad * ((power((1 + v_tasa_dos), (p_plazo - (v_vlr_mes_dos - 1)))) - 1)\r\n"
					+ "                    / (v_tasa_dos * power((1 + v_tasa_dos), (p_plazo - (v_vlr_mes_dos - 1)))))\r\n"
					+ "                    / power((1 + v_tasa_uno), (v_vlr_mes_dos - 1));\r\n"
					+ "end if;\r\n"
					+ "\r\n"
					+ "raise notice 'Monto Maximo a Desembolsar %', (r_monto_max_desembolsar);\r\n"
					+ "\r\n"
					+ "/**********************************RETORNO DE : CALCULOS DE CONCEPTOS PARA SIMULADORES********************************************/\r\n"
					+ "return query\r\n"
					+ "select coalesce (r_monto_solicitar,0),\r\n"
					+ "coalesce (r_cuota_corriente,0), \r\n"
					+ "coalesce (r_estudio_credito_iva,0),\r\n"
					+ "coalesce (r_fianza,0),\r\n"
					+ "coalesce (r_gmf4100,0),\r\n"
					+ "coalesce (r_valor_intereses_iniciales,0),\r\n"
					+ "coalesce (r_prima_anticipada_seguro,0),\r\n"
					+ "coalesce (r_remanente_estimado,0),\r\n"
					+ "coalesce (r_monto_max_desembolsar,0),\r\n"
					+ "coalesce (r_capacidad_cliente,0);\r\n"
					+ "end;\r\n"
					+ "\r\n"
					+ "$function$");
		} catch (Exception e) {
			log.error(e.getMessage());
		}
		
	}
}
